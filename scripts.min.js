/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

var Frame = function(rolls) {
  this.MAX_SCORE = 10;
  this.rolls = rolls;
}

Frame.prototype.rollScore = function() {
  return this.rolls.reduce(function(score, roll) {
    return score + roll;
  });
};

Frame.prototype.total = function(next_frame, next_and_next_frame) {
  return this.rollScore() + this.bonus(next_frame, next_and_next_frame);
};


Frame.prototype.bonus = function(next_frame, next_and_next_frame) {
  if (undefined === next_frame) {
    return 0;
  }
  if (this.isStrike()) {
    return next_frame.strikeBonus(next_and_next_frame);
  }
  if(this.isSpare()) {
    return next_frame.spareBonus();
  }
  return 0;
};

Frame.prototype.isSpare = function() {
  return this.rollScore() == this.MAX_SCORE;
};

Frame.prototype.isStrike = function() {
  return this.firstRoll() == this.MAX_SCORE;
};

Frame.prototype.spareBonus = function() {
  return this.firstRoll();
};

Frame.prototype.strikeBonus = function(next_frame) {
  if(this.isStrike() && next_frame !== undefined) {
    return this.rollScore() + next_frame.firstRoll();
  }
    return this.firstRoll() + this.rolls[1];
};

Frame.prototype.firstRoll = function() {
  return this.rolls[0];
};


module.exports = Frame;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var Frame = __webpack_require__(0);

var Game = function() {
  this.frames = [];
};

Game.prototype.roll = function(rolls) {
  frame = new Frame(rolls)
    this.frames.push(frame);
  };

  Game.prototype.score = function() {
    return this.frames.reduce(function(score, frame, index, frames) {
      return score + frame.total(frames[index + 1], frames[index + 2]);
    }, 0);
  };

module.exports = Game;


/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgZTQ2ZTE0ZTIyOTQyYzNkYjBlMGIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2ZyYW1lLmpzIiwid2VicGFjazovLy8uL3NyYy9nYW1lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxtREFBMkMsY0FBYzs7QUFFekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7O0FDaEVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQSx1Qjs7Ozs7O0FDckRBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gaWRlbnRpdHkgZnVuY3Rpb24gZm9yIGNhbGxpbmcgaGFybW9ueSBpbXBvcnRzIHdpdGggdGhlIGNvcnJlY3QgY29udGV4dFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5pID0gZnVuY3Rpb24odmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9O1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCBlNDZlMTRlMjI5NDJjM2RiMGUwYiIsInZhciBGcmFtZSA9IGZ1bmN0aW9uKHJvbGxzKSB7XG4gIHRoaXMuTUFYX1NDT1JFID0gMTA7XG4gIHRoaXMucm9sbHMgPSByb2xscztcbn1cblxuRnJhbWUucHJvdG90eXBlLnJvbGxTY29yZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5yb2xscy5yZWR1Y2UoZnVuY3Rpb24oc2NvcmUsIHJvbGwpIHtcbiAgICByZXR1cm4gc2NvcmUgKyByb2xsO1xuICB9KTtcbn07XG5cbkZyYW1lLnByb3RvdHlwZS50b3RhbCA9IGZ1bmN0aW9uKG5leHRfZnJhbWUsIG5leHRfYW5kX25leHRfZnJhbWUpIHtcbiAgcmV0dXJuIHRoaXMucm9sbFNjb3JlKCkgKyB0aGlzLmJvbnVzKG5leHRfZnJhbWUsIG5leHRfYW5kX25leHRfZnJhbWUpO1xufTtcblxuXG5GcmFtZS5wcm90b3R5cGUuYm9udXMgPSBmdW5jdGlvbihuZXh0X2ZyYW1lLCBuZXh0X2FuZF9uZXh0X2ZyYW1lKSB7XG4gIGlmICh1bmRlZmluZWQgPT09IG5leHRfZnJhbWUpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBpZiAodGhpcy5pc1N0cmlrZSgpKSB7XG4gICAgcmV0dXJuIG5leHRfZnJhbWUuc3RyaWtlQm9udXMobmV4dF9hbmRfbmV4dF9mcmFtZSk7XG4gIH1cbiAgaWYodGhpcy5pc1NwYXJlKCkpIHtcbiAgICByZXR1cm4gbmV4dF9mcmFtZS5zcGFyZUJvbnVzKCk7XG4gIH1cbiAgcmV0dXJuIDA7XG59O1xuXG5GcmFtZS5wcm90b3R5cGUuaXNTcGFyZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5yb2xsU2NvcmUoKSA9PSB0aGlzLk1BWF9TQ09SRTtcbn07XG5cbkZyYW1lLnByb3RvdHlwZS5pc1N0cmlrZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5maXJzdFJvbGwoKSA9PSB0aGlzLk1BWF9TQ09SRTtcbn07XG5cbkZyYW1lLnByb3RvdHlwZS5zcGFyZUJvbnVzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmZpcnN0Um9sbCgpO1xufTtcblxuRnJhbWUucHJvdG90eXBlLnN0cmlrZUJvbnVzID0gZnVuY3Rpb24obmV4dF9mcmFtZSkge1xuICBpZih0aGlzLmlzU3RyaWtlKCkgJiYgbmV4dF9mcmFtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHRoaXMucm9sbFNjb3JlKCkgKyBuZXh0X2ZyYW1lLmZpcnN0Um9sbCgpO1xuICB9XG4gICAgcmV0dXJuIHRoaXMuZmlyc3RSb2xsKCkgKyB0aGlzLnJvbGxzWzFdO1xufTtcblxuRnJhbWUucHJvdG90eXBlLmZpcnN0Um9sbCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5yb2xsc1swXTtcbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBGcmFtZTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9mcmFtZS5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgRnJhbWUgPSByZXF1aXJlKCcuLi9zcmMvZnJhbWUnKTtcblxudmFyIEdhbWUgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5mcmFtZXMgPSBbXTtcbn07XG5cbkdhbWUucHJvdG90eXBlLnJvbGwgPSBmdW5jdGlvbihyb2xscykge1xuICBmcmFtZSA9IG5ldyBGcmFtZShyb2xscylcbiAgICB0aGlzLmZyYW1lcy5wdXNoKGZyYW1lKTtcbiAgfTtcblxuICBHYW1lLnByb3RvdHlwZS5zY29yZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmZyYW1lcy5yZWR1Y2UoZnVuY3Rpb24oc2NvcmUsIGZyYW1lLCBpbmRleCwgZnJhbWVzKSB7XG4gICAgICByZXR1cm4gc2NvcmUgKyBmcmFtZS50b3RhbChmcmFtZXNbaW5kZXggKyAxXSwgZnJhbWVzW2luZGV4ICsgMl0pO1xuICAgIH0sIDApO1xuICB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9nYW1lLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=